"""Add status to appointments and link payments

Revision ID: f2ffd97800c3
Revises: 5030cdc12c31
Create Date: 2025-07-22 21:32:20.723708

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f2ffd97800c3'
down_revision = '5030cdc12c31'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    appointment_status_v2 = postgresql.ENUM('Agendada', 'Realizada', 'Paga', name='appointment_status_v2')
    appointment_status_v2.create(op.get_bind())

    with op.batch_alter_table('appointment', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('scheduled', 'completed', 'cancelled', name='appointment_status'),
               type_=sa.Enum('Agendada', 'Realizada', 'Paga', name='appointment_status_v2'),
               existing_nullable=False,
               postgresql_using="""CASE status::text
                                    WHEN 'scheduled' THEN 'Agendada'::text 
                                    WHEN 'completed' THEN 'Realizada'::text
                                    WHEN 'cancelled' THEN 'Agendada'::text
                                    ELSE 'Agendada'::text
                                 END::appointment_status_v2""")

    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.add_column(sa.Column('appointment_id', sa.Integer(), nullable=True))
        batch_op.create_index(batch_op.f('ix_payment_appointment_id'), ['appointment_id'], unique=False)
        batch_op.create_foreign_key(None, 'appointment', ['appointment_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_payment_appointment_id'))
        batch_op.drop_column('appointment_id')

    with op.batch_alter_table('appointment', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.Enum('Agendada', 'Realizada', 'Paga', name='appointment_status_v2'),
               type_=postgresql.ENUM('scheduled', 'completed', 'cancelled', name='appointment_status'),
               existing_nullable=False,
               postgresql_using="""CASE status::text
                                    WHEN 'Agendada' THEN 'scheduled'::text
                                    WHEN 'Realizada' THEN 'completed'::text
                                    WHEN 'Paga' THEN 'completed'::text
                                    ELSE 'scheduled'::text
                                 END::appointment_status""")

    appointment_status_v2 = postgresql.ENUM('Agendada', 'Realizada', 'Paga', name='appointment_status_v2')
    appointment_status_v2.drop(op.get_bind())

    # ### end Alembic commands ###
